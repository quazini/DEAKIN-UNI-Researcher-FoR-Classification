version: '3.8'

# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  streamlit:
    image: ${DOCKER_REGISTRY:-registry.digitalocean.com}/${DOCKER_REPO:-for-classification}/streamlit:${VERSION:-latest}

    # Remove development volumes (no source code mounting)
    volumes:
      - streamlit-cache:/app/.streamlit
      - logs:/app/logs

    # Production environment variables
    environment:
      # Streamlit production settings
      - STREAMLIT_SERVER_FILE_WATCHER_TYPE=none
      - STREAMLIT_SERVER_RUN_ON_SAVE=false
      - STREAMLIT_CLIENT_SHOW_ERROR_DETAILS=false
      - STREAMLIT_LOGGER_LEVEL=error

      # Security settings
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true
      - STREAMLIT_SERVER_ENABLE_CORS=false

      # Performance settings
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=50
      - STREAMLIT_GLOBAL_DATA_FRAME_SERIALIZATION_FORMAT=arrow

      # Application configuration
      - APP_ENV=production
      - LOG_LEVEL=WARNING

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

      # Restart policy
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  # Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: for-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - streamlit
    networks:
      - for-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  logs:
    driver: local
  nginx-cache:
    driver: local